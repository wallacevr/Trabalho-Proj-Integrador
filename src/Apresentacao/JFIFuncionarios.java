/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Apresentacao;


import Entidades.Cargos;
import Entidades.Empresas;
import Entidades.Funcionarios;
import Entidades.Unidades;
import Utilitarios.Utilitarios;
import dados.DadosException;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.objects.NativeString.substring;
import negocio.CargosBO;
import negocio.EmpresasBO;
import negocio.FuncionariosBO;
import negocio.NegocioException;
import negocio.UnidadesBO;

/**
 *
 * @author Wallace
 */
public class JFIFuncionarios extends javax.swing.JInternalFrame {
private String User;

public static JDProcFunc func;
    public String getUser() {
        return User;
    }

    public void setUser(String User) {
        this.User = User;
    }
    /**
     * Creates new form JFIFuncionarios
     */
    public JFIFuncionarios(String usuario) {
       super();
        initComponents();
        this.setUser(usuario);
   new Utilitarios().LimpaTela(this);
     cmbEmprAloc.removeAllItems();
       cmbempresa.removeAllItems();
        EmpresasBO boemp=new EmpresasBO();
          try{
                List<Empresas> lista=boemp.listar();
                for(Empresas lstemp:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbempresa.addItem(lstemp.getNmfantasia());
                    cmbEmprAloc.addItem(lstemp.getNmfantasia());
                }
            }catch(NegocioException ex){

            }
   
    
      
            Component[] componentes =  JpanelCargos.getComponents(); // altere para o nome da variavel do seu painel
                for (Component componente : componentes) {
                    componente.setEnabled(false);
                }
         btnnova.setEnabled(true);
        btnsalvar.setEnabled(false);
        btnconsultar.setEnabled(true);
        btnalterar.setEnabled(false);
        btncancelar.setEnabled(false);
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     public void setmatricula(String matricula) {
            Component[] componentes =  JpanelCargos.getComponents(); // altere para o nome da variavel do seu painel
        for (Component componente : componentes) {
            componente.setEnabled(true);
        }
          lblmatricula.setEnabled(false);
           btnnova.setEnabled(false);
            btnsalvar.setEnabled(true);
            btnconsultar.setEnabled(false);
            btnalterar.setEnabled(true);
            btncancelar.setEnabled(true);
          lblmatricula.setEnabled(true);
         lblmatricula.setText(matricula);
         int idunidade=0;
        int idalocacao=0;
        int idemp=0;
        int idempAloc=0;
       
       if (lblmatricula.isEnabled()){
         String idconsulta = lblmatricula.getText();
        FuncionariosBO bo = new FuncionariosBO();
        try {
            
            Funcionarios funcionario=bo.consultar(idconsulta);
            
            txtmatricula.setText(funcionario.getMatricula());
            txtnome.setText(funcionario.getNome());
            txtrg.setText(funcionario.getRg());
            txtcpf.setText(funcionario.getCpf());
            JDtadmissao.setDate(funcionario.getDtadmissao());
            JDtdemissao.setDate(funcionario.getDtdemissao());
            txtctps.setText(funcionario.getCtps());
            txtserie.setText(funcionario.getSerie());
              idunidade=funcionario.getUnidade();
             idalocacao=funcionario.getAlocacao();
             cmbcargo.removeAllItems();
            CargosBO bocargo=new CargosBO();
             try{
                List<Cargos> lista=bocargo.listar();
                for(Cargos lstcargo:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbcargo.addItem(lstcargo.getCargo());
                    if(lstcargo.getIdcargo()==funcionario.getIdcargo() ){
                        cmbcargo.setSelectedItem(lstcargo.getCargo());
                    }
                }
            }catch(NegocioException ex){

            }
        EmpresasBO boemp1 = new EmpresasBO();
        
        idemp=0;
        idempAloc=0;

        UnidadesBO bounid=new UnidadesBO();
        Unidades unid=bounid.consultar(idunidade);
         UnidadesBO bounidAloc=new UnidadesBO();
        Unidades unidAloc=bounidAloc.consultar(idalocacao);
        idemp=unid.getIdempresa();
        
        idempAloc=unidAloc.getIdempresa();
        EmpresasBO boemp=new EmpresasBO();
          try{
                List<Empresas> lista=boemp.listar();
                for(Empresas lstemp:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                
                    if(lstemp.getIdempresa()==idemp){
                         cmbempresa.setSelectedItem(lstemp.getNmfantasia());
                    }
                      if(lstemp.getIdempresa()==idempAloc){
                         cmbEmprAloc.setSelectedItem(lstemp.getNmfantasia());
                    }
                }
            }catch(NegocioException ex){

            }
          
          
          
                
       
       
        EmpresasBO bolst = new EmpresasBO();
        try {
               
                Empresas empresalst=bolst.consultar(cmbempresa.getSelectedItem().toString());
                
                idemp=empresalst.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbunidade.removeAllItems();
        UnidadesBO bouni=new UnidadesBO();
          try{
                List<Unidades> lista=bouni.listar(idemp);
                for(Unidades lstunidades:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbunidade.addItem(lstunidades.getNomeUnidade());
                    if(lstunidades.getId()==funcionario.getUnidade()){
                        cmbunidade.setSelectedItem(lstunidades.getNomeUnidade());
                    }
                }
            }catch(NegocioException ex){

            } catch (DadosException ex) { 
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        } 
          
          
         EmpresasBO bolstaloc = new EmpresasBO();
        try {
               
                Empresas empresalstaloc=bolstaloc.consultar(cmbEmprAloc.getSelectedItem().toString());
                
                idemp=empresalstaloc.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbUnidAloc.removeAllItems();
        UnidadesBO boUniAloc=new UnidadesBO();
          try{
                List<Unidades> lista=boUniAloc.listar(idemp);
                for(Unidades lstunidades:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbUnidAloc.addItem(lstunidades.getNomeUnidade());
                    if(lstunidades.getId()==funcionario.getAlocacao()){
                        cmbUnidAloc.setSelectedItem(lstunidades.getNomeUnidade());
                    }
                }
            }catch(NegocioException ex){

            } catch (DadosException ex) { 
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }   
          
       
          
          
          
          
          

    
      
        } catch (NegocioException ex) {
            Logger.getLogger(JDUnidades.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }                    
 
     }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JpanelCargos = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtctps = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtserie = new javax.swing.JTextField();
        cmbempresa = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbunidade = new javax.swing.JComboBox<>();
        txtnome = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cmbEmprAloc = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        cmbUnidAloc = new javax.swing.JComboBox<>();
        cmbcargo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtmatricula = new javax.swing.JTextField();
        lblmatricula = new javax.swing.JLabel();
        txtcpf = new javax.swing.JTextField();
        txtrg = new javax.swing.JTextField();
        JDtadmissao = new com.toedter.calendar.JDateChooser();
        JDtdemissao = new com.toedter.calendar.JDateChooser();
        btnnova = new javax.swing.JButton();
        btnsalvar = new javax.swing.JButton();
        btnconsultar = new javax.swing.JButton();
        btnalterar = new javax.swing.JButton();
        btncancelar = new javax.swing.JButton();
        btnconsultar1 = new javax.swing.JButton();

        jLabel2.setText("Nome:");

        jLabel3.setText("CPF:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("CADASTRO DE FUNCIONÁRIOS");

        jLabel1.setText("CTPS:");

        jLabel7.setText("RG:");

        jLabel8.setText("SÉRIE:");

        cmbempresa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbempresaItemStateChanged(evt);
            }
        });
        cmbempresa.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
                cmbempresaPopupMenuCanceled(evt);
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbempresaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cmbempresaPopupMenuWillBecomeVisible(evt);
            }
        });
        cmbempresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbempresaActionPerformed(evt);
            }
        });

        jLabel9.setText("Empresa(Contrato):");

        jLabel10.setText("Unidade(Contrato):");

        jLabel15.setText("Empresa (Alocação):");

        cmbEmprAloc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEmprAlocActionPerformed(evt);
            }
        });

        jLabel16.setText("Unidade(Alocação):");

        cmbcargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Cargo:");

        jLabel6.setText("Data Admissão:");

        jLabel11.setText("Data Demissão:");

        jLabel12.setText("Matrícula:");

        txtmatricula.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                txtmatriculaAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        lblmatricula.setEnabled(false);
        lblmatricula.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                lblmatriculaHierarchyChanged(evt);
            }
        });

        javax.swing.GroupLayout JpanelCargosLayout = new javax.swing.GroupLayout(JpanelCargos);
        JpanelCargos.setLayout(JpanelCargosLayout);
        JpanelCargosLayout.setHorizontalGroup(
            JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanelCargosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpanelCargosLayout.createSequentialGroup()
                        .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JpanelCargosLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbempresa, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JpanelCargosLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(cmbEmprAloc, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbUnidAloc, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbunidade, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(JpanelCargosLayout.createSequentialGroup()
                        .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(29, 29, 29)
                        .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(JpanelCargosLayout.createSequentialGroup()
                                .addComponent(txtcpf, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addGap(7, 7, 7)
                                .addComponent(txtrg, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtctps, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtserie, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbcargo, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtnome))
                        .addGap(18, 18, 18)
                        .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JDtadmissao, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .addComponent(JDtdemissao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(JpanelCargosLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtmatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblmatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(141, Short.MAX_VALUE))
            .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(JpanelCargosLayout.createSequentialGroup()
                    .addGap(184, 184, 184)
                    .addComponent(jLabel5)
                    .addContainerGap(492, Short.MAX_VALUE)))
        );
        JpanelCargosLayout.setVerticalGroup(
            JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanelCargosLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblmatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtmatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(JDtadmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel7)
                        .addComponent(jLabel1)
                        .addComponent(txtctps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(txtserie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbcargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel11)
                        .addComponent(txtcpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(JDtdemissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbempresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(cmbunidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbEmprAloc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(cmbUnidAloc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(JpanelCargosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(JpanelCargosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel5)
                    .addContainerGap(173, Short.MAX_VALUE)))
        );

        btnnova.setText("NOVO");
        btnnova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnovaActionPerformed(evt);
            }
        });

        btnsalvar.setText("SALVAR");
        btnsalvar.setEnabled(false);
        btnsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsalvarActionPerformed(evt);
            }
        });

        btnconsultar.setText("CONSULTAR");
        btnconsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultarActionPerformed(evt);
            }
        });

        btnalterar.setText("ALTERAR");
        btnalterar.setEnabled(false);
        btnalterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnalterarActionPerformed(evt);
            }
        });

        btncancelar.setText("CANCELAR");
        btncancelar.setEnabled(false);
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });

        btnconsultar1.setText("PROCURAR");
        btnconsultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnnova)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnsalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnconsultar)
                .addGap(18, 18, 18)
                .addComponent(btnconsultar1)
                .addGap(17, 17, 17)
                .addComponent(btnalterar)
                .addGap(18, 18, 18)
                .addComponent(btncancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(JpanelCargos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 290, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JpanelCargos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnnova)
                    .addComponent(btnsalvar)
                    .addComponent(btnconsultar)
                    .addComponent(btnalterar)
                    .addComponent(btncancelar)
                    .addComponent(btnconsultar1))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void mostrafunc(){
   func = new JDProcFunc(this,true);
   func.setLocationRelativeTo(null);
   func.setVisible(true);
}
    private void btnnovaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnovaActionPerformed
        // TODO add your handling code here:
           Component[] componentes =  JpanelCargos.getComponents(); // altere para o nome da variavel do seu painel
         for (Component componente : componentes) {
                    componente.setEnabled(true);
                }
                for (int i=0; i < JpanelCargos.getComponentCount(); i++) {
                    //varre todos os componentes
                    Component c = JpanelCargos.getComponent(i);
                    if (c instanceof JTextField) {
                        //apaga os valores
                        JTextField field = (JTextField) c;
                        field.setText("");
                     
                    }
           }
        cmbcargo.removeAllItems();
        CargosBO bo=new CargosBO();
          try{
                List<Cargos> lista=bo.listar();
                for(Cargos lstcargo:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbcargo.addItem(lstcargo.getCargo());
                }
            }catch(NegocioException ex){

            }
      
                btnnova.setEnabled(false);
                btnsalvar.setEnabled(true);
                btnconsultar.setEnabled(false);
                btnalterar.setEnabled(false);
                btncancelar.setEnabled(true);
                JpanelCargos.setEnabled(true);
    }//GEN-LAST:event_btnnovaActionPerformed
    
    private void btnsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalvarActionPerformed
        // TODO add your handling code here:
        int idcargo=0;
        int idunidade=0;
        int idalocacao=0;
        int idemp=0;
        int idempAloc=0;
        boolean vazio=true;
        
        Component[] componentes1 =  JpanelCargos.getComponents(); // altere para o nome da variavel do seu painel

      for (int i=0; i < JpanelCargos.getComponentCount(); i++) {
          //varre todos os componentes
          Component c1 = JpanelCargos.getComponent(i);
          if (c1 instanceof JTextField) {
              //apaga os valores
              JTextField field = (JTextField) c1;
              if(!field.getText().isEmpty()){
                 vazio=false;
               }else{
                  break;
              }
              
          }
     } 
        
        
      if(!vazio){  
        Date dataHoraAtual = new Date();
       
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String data = new SimpleDateFormat("dd-MM-yyyy").format(dataHoraAtual);
        String hora = new SimpleDateFormat("HH:mm:ss").format(dataHoraAtual);
        String dtadm, dtdem;
        Funcionarios funcionario= new Funcionarios();
        funcionario.setMatricula(txtmatricula.getText());
        funcionario.setNome(txtnome.getText());
      
        funcionario.setCpf(txtcpf.getText());
        
        funcionario.setUser(this.getUser());
        
        funcionario.setHora(java.sql.Time.valueOf(hora));
        funcionario.setRg(txtrg.getText());
        funcionario.setCtps(txtctps.getText());
        funcionario.setSerie(txtserie.getText());
        funcionario.setSerie(txtserie.getText());
        java.util.Date pega = JDtadmissao.getDate();
        dtadm=formato.format(pega);
      
        
       if(JDtdemissao.getDate()!=null){
           pega = JDtdemissao.getDate();
        dtdem=formato.format(pega);
        
           funcionario.setDtdemissao(java.sql.Date.valueOf(dtdem));
       }
        
        data=data.substring(6,10)+"-"+data.substring(3,5)+"-"+data.substring(0,2);
         
        funcionario.setDt(java.sql.Date.valueOf(data));
      funcionario.setDtadmissao(java.sql.Date.valueOf(dtadm));
      
        
       
            
       CargosBO bocarg = new CargosBO();
        try { 
            
            Cargos cargo=bocarg.consultar(cmbcargo.getSelectedItem().toString());
            
            idcargo=cargo.getIdcargo();
            
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
         EmpresasBO boemp = new EmpresasBO();
        try { 
            Empresas empresa=boemp.consultar(cmbempresa.getSelectedItem().toString());
            idemp=empresa.getIdempresa();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        EmpresasBO boempaloc = new EmpresasBO();
        try { 
            Empresas EmprAloc=boempaloc.consultar(cmbEmprAloc.getSelectedItem().toString());
            idempAloc=EmprAloc.getIdempresa();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        UnidadesBO bounid = new UnidadesBO();
        try { 
            Unidades unidade=bounid.consultar(idemp,cmbunidade.getSelectedItem().toString());
            //Unidades unidade=bounid.consultar(11,1);
            idunidade=unidade.getId();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
         UnidadesBO bounidAloc = new UnidadesBO();
        try { 
            Unidades unidadeAloc=bounidAloc.consultar(idempAloc,cmbUnidAloc.getSelectedItem().toString());
           // Unidades unidadeAloc=bounidAloc.consultar(11,1);
            idalocacao=unidadeAloc.getId();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        funcionario.setIdcargo(idcargo);
        
        funcionario.setUnidade(idunidade);
        funcionario.setAlocacao(idalocacao);
        FuncionariosBO bo = new FuncionariosBO();
        try{
            if(!funcionario.getMatricula().isEmpty()){
                bo.inserir(funcionario);
             
                
                Component[] componentes =  JpanelCargos.getComponents(); // altere para o nome da variavel do seu painel
                for (Component componente : componentes) {
                    componente.setEnabled(false);
                }
                for (int i=0; i < JpanelCargos.getComponentCount(); i++) {
                    //varre todos os componentes
                    Component c = JpanelCargos.getComponent(i);
                    if (c instanceof JTextField) {
                        //apaga os valores
                        JTextField field = (JTextField) c;
                        field.setText("");
                        System.out.println("apagando campo " + i);
                    }
           }
             
            }
             btnnova.setEnabled(true);
            btnsalvar.setEnabled(false);
            btnconsultar.setEnabled(true);
            btnalterar.setEnabled(false);
            btncancelar.setEnabled(true);
            JpanelCargos.setEnabled(false);
        }catch(NegocioException e){
            JOptionPane.showMessageDialog(null,e.getMessage() ,"Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }else{
          JOptionPane.showMessageDialog(null,"Preencha todos os campos obrigatórios" ,"Aviso", JOptionPane.WARNING_MESSAGE);
      }
    }//GEN-LAST:event_btnsalvarActionPerformed

    private void btnconsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultarActionPerformed
        // TODO add your handling code here:
        int idunidade=0;
        int idalocacao=0;
        int idemp=0;
        int idempAloc=0;
         String idconsulta = JOptionPane.showInputDialog("Digite a matricula do Funcionario");
        FuncionariosBO bo = new FuncionariosBO();
                 Component[] componentes =  JpanelCargos.getComponents(); // altere para o nome da variavel do seu painel
                for (Component componente : componentes) {
                    componente.setEnabled(true);
                }
         JpanelCargos.setEnabled(true);
            btnnova.setEnabled(false);
            btnsalvar.setEnabled(false);
            btnconsultar.setEnabled(false);
            btnalterar.setEnabled(true);
            btncancelar.setEnabled(true);
        try {
            
            Funcionarios funcionario=bo.consultar(idconsulta);
            
            txtmatricula.setText(funcionario.getMatricula());
            txtnome.setText(funcionario.getNome());
            txtrg.setText(funcionario.getRg());
            txtcpf.setText(funcionario.getCpf());
            JDtadmissao.setDate(funcionario.getDtadmissao());
            JDtdemissao.setDate(funcionario.getDtdemissao());
            txtctps.setText(String.valueOf(funcionario.getCtps()));
            txtserie.setText(funcionario.getSerie());
              idunidade=funcionario.getUnidade();
             idalocacao=funcionario.getAlocacao();
             cmbcargo.removeAllItems();
            CargosBO bocargo=new CargosBO();
             try{
                List<Cargos> lista=bocargo.listar();
                for(Cargos lstcargo:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbcargo.addItem(lstcargo.getCargo());
                    if(lstcargo.getIdcargo()==funcionario.getIdcargo() ){
                        cmbcargo.setSelectedItem(lstcargo.getCargo());
                    }
                }
            }catch(NegocioException ex){

            }
        EmpresasBO boemp1 = new EmpresasBO();
        
        idemp=0;
        idempAloc=0;
    
        UnidadesBO bounid=new UnidadesBO();
        Unidades unid=bounid.consultar(idunidade);
         UnidadesBO bounidAloc=new UnidadesBO();
        Unidades unidAloc=bounidAloc.consultar(idalocacao);
        idemp=unid.getIdempresa();
        
        idempAloc=unidAloc.getIdempresa();
        EmpresasBO boemp=new EmpresasBO();
          try{
                List<Empresas> lista=boemp.listar();
                for(Empresas lstemp:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
               
                    if(lstemp.getIdempresa()==idemp){
                         cmbempresa.setSelectedItem(lstemp.getNmfantasia());
                    }
                      if(lstemp.getIdempresa()==idempAloc){
                         cmbEmprAloc.setSelectedItem(lstemp.getNmfantasia());
                    }
                }
            }catch(NegocioException ex){

            }
          
          
          
                
       
       
        EmpresasBO bolst = new EmpresasBO();
        try {
               
                Empresas empresalst=bolst.consultar(cmbempresa.getSelectedItem().toString());
                
                idemp=empresalst.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbunidade.removeAllItems();
        UnidadesBO bouni=new UnidadesBO();
          try{
                List<Unidades> lista=bouni.listar(idemp);
                for(Unidades lstunidades:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbunidade.addItem(lstunidades.getNomeUnidade());
                    if(lstunidades.getId()==funcionario.getUnidade()){
                        cmbunidade.setSelectedItem(lstunidades.getNomeUnidade());
                    }
                }
            }catch(NegocioException ex){

            } catch (DadosException ex) { 
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        } 
          
          
         EmpresasBO bolstaloc = new EmpresasBO();
        try {
               
                Empresas empresalstaloc=bolstaloc.consultar(cmbEmprAloc.getSelectedItem().toString());
                
                idemp=empresalstaloc.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbUnidAloc.removeAllItems();
        UnidadesBO boUniAloc=new UnidadesBO();
          try{
                List<Unidades> lista=boUniAloc.listar(idemp);
                for(Unidades lstunidades:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbUnidAloc.addItem(lstunidades.getNomeUnidade());
                    if(lstunidades.getId()==funcionario.getAlocacao()){
                        cmbUnidAloc.setSelectedItem(lstunidades.getNomeUnidade());
                    }
                }
            }catch(NegocioException ex){

            } catch (DadosException ex) { 
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }   
 
          cmbunidade.setSelectedItem(unid.getNomeUnidade());
          cmbUnidAloc.setSelectedItem(unidAloc.getNomeUnidade());

        
        } catch (NegocioException ex) {
            Logger.getLogger(JDUnidades.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnconsultarActionPerformed

    private void btnalterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnalterarActionPerformed
       int idcargo=0;
        int idunidade=0;
        int idalocacao=0;
        int idemp=0;
        int idempAloc=0;
        Date dataHoraAtual = new Date();
       
        boolean vazio=true;
        
        Component[] componentes1 =  JpanelCargos.getComponents(); // altere para o nome da variavel do seu painel

      for (int i=0; i < JpanelCargos.getComponentCount(); i++) {
          //varre todos os componentes
          Component c1 = JpanelCargos.getComponent(i);
          if (c1 instanceof JTextField) {
              //apaga os valores
              JTextField field = (JTextField) c1;
              if(!field.getText().isEmpty()){
                 vazio=false;
               }else{
                  break;
              }
              
          }
     } 
        
        
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String data = new SimpleDateFormat("dd-MM-yyyy").format(dataHoraAtual);
        String hora = new SimpleDateFormat("HH:mm:ss").format(dataHoraAtual);
        String dtadm, dtdem;
        Funcionarios funcionario= new Funcionarios();
        funcionario.setMatricula(txtmatricula.getText());
        funcionario.setNome(txtnome.getText());
        funcionario.setCpf(txtcpf.getText());
        funcionario.setUser(this.getUser());
        
        funcionario.setHora(java.sql.Time.valueOf(hora));
        funcionario.setRg(txtrg.getText());
        funcionario.setCtps(txtctps.getText());
        funcionario.setSerie(txtserie.getText());
        funcionario.setSerie(txtserie.getText());
        java.util.Date pega = JDtadmissao.getDate();
        dtadm=formato.format(pega);
      
        
       if(JDtdemissao.getDate()!=null){
           pega = JDtdemissao.getDate();
        dtdem=formato.format(pega);
        
           funcionario.setDtdemissao(java.sql.Date.valueOf(dtdem));
       }
        
        data=data.substring(6,10)+"-"+data.substring(3,5)+"-"+data.substring(0,2);
         
        funcionario.setDt(java.sql.Date.valueOf(data));
      funcionario.setDtadmissao(java.sql.Date.valueOf(dtadm));
      
        
       
            
       CargosBO bocarg = new CargosBO();
        try { 
            
            Cargos cargo=bocarg.consultar(cmbcargo.getSelectedItem().toString());
            
            idcargo=cargo.getIdcargo();
            
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
         EmpresasBO boemp = new EmpresasBO();
        try { 
            Empresas empresa=boemp.consultar(cmbempresa.getSelectedItem().toString());
            idemp=empresa.getIdempresa();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        EmpresasBO boempaloc = new EmpresasBO();
        try { 
            Empresas EmprAloc=boempaloc.consultar(cmbEmprAloc.getSelectedItem().toString());
            idempAloc=EmprAloc.getIdempresa();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        UnidadesBO bounid = new UnidadesBO();
        try { 
            Unidades unidade=bounid.consultar(idemp,cmbunidade.getSelectedItem().toString());
            //Unidades unidade=bounid.consultar(11,1);
            idunidade=unidade.getId();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
         UnidadesBO bounidAloc = new UnidadesBO();
        try { 
            Unidades unidadeAloc=bounidAloc.consultar(idempAloc,cmbUnidAloc.getSelectedItem().toString());
            //Unidades unidadeAloc=bounidAloc.consultar(1,1);
            idalocacao=unidadeAloc.getId();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        funcionario.setIdcargo(idcargo);
        JOptionPane.showMessageDialog(null, idunidade);
        funcionario.setUnidade(idunidade);
        funcionario.setAlocacao(idalocacao);
        FuncionariosBO bo = new FuncionariosBO();
        try{
            if(!funcionario.getMatricula().isEmpty()){
                bo.alterar(funcionario);
                btnnova.setEnabled(true);
                btnsalvar.setEnabled(false);
                btnconsultar.setEnabled(true);
                btnalterar.setEnabled(false);
                btncancelar.setEnabled(false);
                JpanelCargos.setEnabled(true);
                
                Component[] componentes =  JpanelCargos.getComponents(); // altere para o nome da variavel do seu painel
                for (Component componente : componentes) {
                    componente.setEnabled(false);
                }
                for (int i=0; i < JpanelCargos.getComponentCount(); i++) {
                    //varre todos os componentes
                    Component c = JpanelCargos.getComponent(i);
                    if (c instanceof JTextField) {
                        //apaga os valores
                        JTextField field = (JTextField) c;
                        field.setText("");
                        System.out.println("apagando campo " + i);
                    }
           }
             
            }

        }catch(NegocioException e){
            JOptionPane.showMessageDialog(null,e.getMessage() ,"Aviso", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnalterarActionPerformed
    }
    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        // TODO add your handling code here:
        btnnova.setEnabled(true);
        btnsalvar.setEnabled(false);
        btnconsultar.setEnabled(true);
        btnalterar.setEnabled(false);
        btncancelar.setEnabled(false);
       Component[] componentes =  JpanelCargos.getComponents(); // altere para o nome da variavel do seu painel
         for (Component componente : componentes) {
                    componente.setEnabled(false);
                }
                for (int i=0; i < JpanelCargos.getComponentCount(); i++) {
                    //varre todos os componentes
                    Component c = JpanelCargos.getComponent(i);
                    if (c instanceof JTextField) {
                        //apaga os valores
                        JTextField field = (JTextField) c;
                        field.setText("");
                        System.out.println("apagando campo " + i);
                    }
           }
    }//GEN-LAST:event_btncancelarActionPerformed

    private void cmbempresaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbempresaItemStateChanged
        // TODO add your handling code here:
      
         
    }//GEN-LAST:event_cmbempresaItemStateChanged
  
    private void cmbempresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbempresaActionPerformed
        // TODO add your handling code here:
       String nmfantasia = cmbempresa.getSelectedItem().toString();
       int idemp=0;
       
        EmpresasBO bo = new EmpresasBO();
        try {
               
                Empresas empresa=bo.consultar(nmfantasia);
                
                idemp=empresa.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbunidade.removeAllItems();
        if(idemp!=0){
            UnidadesBO bouni=new UnidadesBO();
              try{
                    List<Unidades> lista=bouni.listar(idemp);
                    for(Unidades lstunidades:lista){

                    //Object[] linha = //alguma linha

                    //model.addRow(linha);

                        cmbunidade.addItem(lstunidades.getNomeUnidade());
                    }
                }catch(NegocioException ex){

                } catch (DadosException ex) { 
                Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
    }//GEN-LAST:event_cmbempresaActionPerformed
    
    private void cmbempresaPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbempresaPopupMenuWillBecomeVisible
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbempresaPopupMenuWillBecomeVisible

    private void cmbempresaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbempresaPopupMenuWillBecomeInvisible
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbempresaPopupMenuWillBecomeInvisible

    private void cmbempresaPopupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbempresaPopupMenuCanceled
        // TODO add your handling code here:
        
    
        
    }//GEN-LAST:event_cmbempresaPopupMenuCanceled

    private void cmbEmprAlocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEmprAlocActionPerformed
        // TODO add your handling code here:
    if(cmbEmprAloc.getItemCount()>0){
            String nmfantasia = cmbEmprAloc.getSelectedItem().toString();
          int idemp=0;

           EmpresasBO bo = new EmpresasBO();
           try {

                   Empresas empresa=bo.consultar(nmfantasia);

                   idemp=empresa.getIdempresa();

           } catch (NegocioException ex) {
               Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
           }
           cmbUnidAloc.removeAllItems();
           if(idemp!=0){
           UnidadesBO bouni=new UnidadesBO();
             try{
                   List<Unidades> lista=bouni.listar(idemp);
                   for(Unidades lstunidades:lista){

                   //Object[] linha = //alguma linha

                   //model.addRow(linha);

                       cmbUnidAloc.addItem(lstunidades.getNomeUnidade());
                   }
               }catch(NegocioException ex){

               } catch (DadosException ex) { 
               Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
               } 
           }
        }
    }//GEN-LAST:event_cmbEmprAlocActionPerformed

    private void txtmatriculaAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_txtmatriculaAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmatriculaAncestorMoved

    private void btnconsultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultar1ActionPerformed
        // TODO add your handling code here:
        mostrafunc();
    }//GEN-LAST:event_btnconsultar1ActionPerformed

    private void lblmatriculaHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_lblmatriculaHierarchyChanged
        // TODO add your handling code here:
     /*   int idunidade=0;
        int idalocacao=0;
        int idemp=0;
        int idempAloc=0;
       
       if (lblmatricula.isEnabled()){
         String idconsulta = lblmatricula.getText();
        FuncionariosBO bo = new FuncionariosBO();
        try {
            
            Funcionarios funcionario=bo.consultar(idconsulta);
            
            txtmatricula.setText(funcionario.getMatricula());
            txtnome.setText(funcionario.getNome());
            txtrg.setText(funcionario.getRg());
            txtcpf.setText(funcionario.getCpf());
            JDtadmissao.setDate(funcionario.getDtadmissao());
            JDtdemissao.setDate(funcionario.getDtdemissao());
            txtctps.setText(String.valueOf(funcionario.getCtps()));
            txtserie.setText(funcionario.getSerie());
              idunidade=funcionario.getUnidade();
             idalocacao=funcionario.getAlocacao();
             cmbcargo.removeAllItems();
            CargosBO bocargo=new CargosBO();
             try{
                List<Cargos> lista=bocargo.listar();
                for(Cargos lstcargo:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbcargo.addItem(lstcargo.getCargo());
                    if(lstcargo.getIdcargo()==funcionario.getIdcargo() ){
                        cmbcargo.setSelectedItem(lstcargo.getCargo());
                    }
                }
            }catch(NegocioException ex){

            }
        EmpresasBO boemp1 = new EmpresasBO();
        
        idemp=0;
        idempAloc=0;
       cmbEmprAloc.removeAllItems();
       cmbempresa.removeAllItems();
        UnidadesBO bounid=new UnidadesBO();
        Unidades unid=bounid.consultar(idunidade);
         UnidadesBO bounidAloc=new UnidadesBO();
        Unidades unidAloc=bounidAloc.consultar(idalocacao);
        idemp=unid.getIdempresa();
        
        idempAloc=unidAloc.getIdempresa();
        EmpresasBO boemp=new EmpresasBO();
          try{
                List<Empresas> lista=boemp.listar();
                for(Empresas lstemp:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbempresa.addItem(lstemp.getNmfantasia());
                    cmbEmprAloc.addItem(lstemp.getNmfantasia());
                    if(lstemp.getIdempresa()==idemp){
                         cmbempresa.setSelectedItem(lstemp.getNmfantasia());
                    }
                      if(lstemp.getIdempresa()==idempAloc){
                         cmbEmprAloc.setSelectedItem(lstemp.getNmfantasia());
                    }
                }
            }catch(NegocioException ex){

            }
          
          
          
                
       
       
        EmpresasBO bolst = new EmpresasBO();
        try {
               
                Empresas empresalst=bolst.consultar(cmbempresa.getSelectedItem().toString());
                
                idemp=empresalst.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbunidade.removeAllItems();
        UnidadesBO bouni=new UnidadesBO();
          try{
                List<Unidades> lista=bouni.listar(idemp);
                for(Unidades lstunidades:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbunidade.addItem(lstunidades.getNomeUnidade());
                    if(lstunidades.getId()==funcionario.getUnidade()){
                        cmbunidade.setSelectedItem(lstunidades.getNomeUnidade());
                    }
                }
            }catch(NegocioException ex){

            } catch (DadosException ex) { 
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        } 
          
          
         EmpresasBO bolstaloc = new EmpresasBO();
        try {
               
                Empresas empresalstaloc=bolstaloc.consultar(cmbEmprAloc.getSelectedItem().toString());
                
                idemp=empresalstaloc.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbUnidAloc.removeAllItems();
        UnidadesBO boUniAloc=new UnidadesBO();
          try{
                List<Unidades> lista=boUniAloc.listar(idemp);
                for(Unidades lstunidades:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbUnidAloc.addItem(lstunidades.getNomeUnidade());
                    if(lstunidades.getId()==funcionario.getAlocacao()){
                        cmbUnidAloc.setSelectedItem(lstunidades.getNomeUnidade());
                    }
                }
            }catch(NegocioException ex){

            } catch (DadosException ex) { 
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }   
          
       
          
          
          
          
          

            btnnova.setEnabled(false);
            btnsalvar.setEnabled(false);
            btnconsultar.setEnabled(false);
            btnalterar.setEnabled(true);
            btncancelar.setEnabled(true);
      
        } catch (NegocioException ex) {
            Logger.getLogger(JDUnidades.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_lblmatriculaHierarchyChanged
    */
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser JDtadmissao;
    private com.toedter.calendar.JDateChooser JDtdemissao;
    private javax.swing.JPanel JpanelCargos;
    private javax.swing.JButton btnalterar;
    private javax.swing.JButton btncancelar;
    private javax.swing.JButton btnconsultar;
    private javax.swing.JButton btnconsultar1;
    private javax.swing.JButton btnnova;
    private javax.swing.JButton btnsalvar;
    private javax.swing.JComboBox<String> cmbEmprAloc;
    private javax.swing.JComboBox<String> cmbUnidAloc;
    private javax.swing.JComboBox<String> cmbcargo;
    private javax.swing.JComboBox<String> cmbempresa;
    private javax.swing.JComboBox<String> cmbunidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblmatricula;
    private javax.swing.JTextField txtcpf;
    private javax.swing.JTextField txtctps;
    private javax.swing.JTextField txtmatricula;
    private javax.swing.JTextField txtnome;
    private javax.swing.JTextField txtrg;
    private javax.swing.JTextField txtserie;
    // End of variables declaration//GEN-END:variables
}
