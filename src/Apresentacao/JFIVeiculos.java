/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Apresentacao;


import Entidades.Cargos;
import Entidades.Classificacao;
import Entidades.Empresas;
import Entidades.Funcionarios;
import Entidades.Unidades;
import Entidades.Veiculos;
import Utilitarios.Utilitarios;
import dados.DadosException;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.objects.NativeString.substring;
import negocio.CargosBO;
import negocio.ClassificacaoBO;
import negocio.EmpresasBO;
import negocio.FuncionariosBO;
import negocio.NegocioException;
import negocio.UnidadesBO;
import negocio.VeiculosBO;

/**
 *
 * @author Wallace
 */
public class JFIVeiculos extends javax.swing.JInternalFrame {
private String User;

public static JDProcveiculo frota;
    public String getUser() {
        return User;
    }

    public void setUser(String User) {
        this.User = User;
    }
    /**
     * Creates new form JFIFuncionarios
     */
    public JFIVeiculos(String usuario) {
       super();
        initComponents();
        this.setUser(usuario);
   new Utilitarios().LimpaTela(this);
                cmbclassificacao.removeAllItems();
        ClassificacaoBO bo=new ClassificacaoBO();
          try{
                List<Classificacao> lista=bo.listar();
                for(Classificacao lstclassificacao:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbclassificacao.addItem(lstclassificacao.getClassificacao());
                }
            }catch(NegocioException ex){

            }
               if (cmbempr.getItemCount()>0){
            cmbempr.removeAllItems();
        }
         if (cmbEmprAloc.getItemCount()>0){
            cmbEmprAloc.removeAllItems();
        }
      
       
        EmpresasBO boemp=new EmpresasBO();
          try{
                List<Empresas> lista=boemp.listar();
                for(Empresas lstemp:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbempr.addItem(lstemp.getNmfantasia());
                    cmbEmprAloc.addItem(lstemp.getNmfantasia());
                }
            }catch(NegocioException ex){

            }
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     public void setrenavam(String Placa) {
          int idunidade=0;
        int idalocacao=0;
        int idemp=0;
        int idempAloc=0;
         String idconsulta = Placa;
        VeiculosBO bo = new VeiculosBO();
                 Component[] componentes =  JpanelFrota.getComponents(); // altere para o nome da variavel do seu painel
                for (Component componente : componentes) {
                    componente.setEnabled(true);
                }
         JpanelFrota.setEnabled(true);
            btnnova.setEnabled(false);
            btnsalvar.setEnabled(false);
            btnconsultar.setEnabled(false);
            btnalterar.setEnabled(true);
            btncancelar.setEnabled(true);
        try {
            
            Veiculos veiculo=bo.consultar(idconsulta);
            
            txtrenavam.setText(String.valueOf(veiculo.getRenavam()));
            txtplaca.setText(veiculo.getPlaca());
            txtchassi.setText(veiculo.getChassi());
            txtmarcamodelo.setText(veiculo.getMarcaModelo());
            JAno.setYear(veiculo.getAno());
            txtmunicipio.setText(veiculo.getMunicipio());
           
                idunidade=veiculo.getProprietario();
             idalocacao=veiculo.getAlocacao();
             cmbclassificacao.removeAllItems();
            ClassificacaoBO boclassificacao=new ClassificacaoBO();
             try{
                List<Classificacao> lista=boclassificacao.listar();
                for(Classificacao lstclassificacao:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbclassificacao.addItem(lstclassificacao.getClassificacao());
                    if(lstclassificacao.getIdclassificacao()==veiculo.getClassificacao() ){
                        cmbclassificacao.setSelectedItem(lstclassificacao.getClassificacao());
                    }
                }
            }catch(NegocioException ex){

            }
        EmpresasBO boemp1 = new EmpresasBO();
        
        idemp=0;
        idempAloc=0;
    
        UnidadesBO bounid=new UnidadesBO();
        Unidades unid=bounid.consultar(idunidade);
         UnidadesBO bounidAloc=new UnidadesBO();
        Unidades unidAloc=bounidAloc.consultar(idalocacao);
        idemp=unid.getIdempresa();
        
        idempAloc=unidAloc.getIdempresa();
        EmpresasBO boemp=new EmpresasBO();
          try{
                List<Empresas> lista=boemp.listar();
                for(Empresas lstemp:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
               
                    if(lstemp.getIdempresa()==idemp){
                         cmbempr.setSelectedItem(lstemp.getNmfantasia());
                    }
                      if(lstemp.getIdempresa()==idempAloc){
                         cmbEmprAloc.setSelectedItem(lstemp.getNmfantasia());
                    }
                }
            }catch(NegocioException ex){

            }
          
          
          
                
       
       
        EmpresasBO bolst = new EmpresasBO();
        try {
               
                Empresas empresalst=bolst.consultar(cmbempr.getSelectedItem().toString());
                
                idemp=empresalst.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbunidade.removeAllItems();
        UnidadesBO bouni=new UnidadesBO();
          try{
                List<Unidades> lista=bouni.listar(idemp);
                for(Unidades lstunidades:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbunidade.addItem(lstunidades.getNomeUnidade());
                    if(lstunidades.getId()==veiculo.getProprietario()){
                        cmbunidade.setSelectedItem(lstunidades.getNomeUnidade());
                    }
                }
            }catch(NegocioException ex){

            } catch (DadosException ex) { 
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        } 
          
          
         EmpresasBO bolstaloc = new EmpresasBO();
        try {
               
                Empresas empresalstaloc=bolstaloc.consultar(cmbEmprAloc.getSelectedItem().toString());
                
                idemp=empresalstaloc.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbUnidAloc.removeAllItems();
        UnidadesBO boUniAloc=new UnidadesBO();
          try{
                List<Unidades> lista=boUniAloc.listar(idemp);
                for(Unidades lstunidades:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbUnidAloc.addItem(lstunidades.getNomeUnidade());
                    if(lstunidades.getId()==veiculo.getAlocacao()){
                        cmbUnidAloc.setSelectedItem(lstunidades.getNomeUnidade());
                    }
                }
            }catch(NegocioException ex){

            } catch (DadosException ex) { 
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }   
 
          cmbunidade.setSelectedItem(unid.getNomeUnidade());
          cmbUnidAloc.setSelectedItem(unidAloc.getNomeUnidade());

        
        } catch (NegocioException ex) {
            Logger.getLogger(JDUnidades.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JpanelFrota = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbunidade = new javax.swing.JComboBox<>();
        txtmarcamodelo = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cmbUnidAloc = new javax.swing.JComboBox<>();
        cmbclassificacao = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtrenavam = new javax.swing.JTextField();
        lblrenavam = new javax.swing.JLabel();
        txtmunicipio = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtplaca = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtchassi = new javax.swing.JTextField();
        JAno = new com.toedter.calendar.JYearChooser();
        jLabel17 = new javax.swing.JLabel();
        cmbEmprAloc = new javax.swing.JComboBox<>();
        cmbempr = new javax.swing.JComboBox<>();
        btnnova = new javax.swing.JButton();
        btnsalvar = new javax.swing.JButton();
        btnconsultar = new javax.swing.JButton();
        btnalterar = new javax.swing.JButton();
        btncancelar = new javax.swing.JButton();
        btnconsultar1 = new javax.swing.JButton();

        JpanelFrota.setEnabled(false);

        jLabel2.setText("MARCA/MODELO:");

        jLabel3.setText("MUNICÍPIO LICENCIAMENTO:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("CADASTRO DE VEÍCULOS");

        jLabel9.setText("Empresa(Contrato):");

        jLabel10.setText("Unidade(Contrato):");

        cmbunidade.setEnabled(false);

        txtmarcamodelo.setEnabled(false);

        jLabel15.setText("Empresa (Alocação):");

        jLabel16.setText("Unidade(Alocação):");

        cmbUnidAloc.setEnabled(false);

        cmbclassificacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbclassificacao.setEnabled(false);

        jLabel4.setText("CLASSIFICAÇÃO:");

        jLabel12.setText("RENAVAM:");

        txtrenavam.setEnabled(false);
        txtrenavam.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                txtrenavamAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        txtrenavam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtrenavamKeyTyped(evt);
            }
        });

        lblrenavam.setEnabled(false);
        lblrenavam.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                lblrenavamHierarchyChanged(evt);
            }
        });

        txtmunicipio.setEnabled(false);

        jLabel13.setText("PLACA:");

        txtplaca.setEnabled(false);
        txtplaca.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                txtplacaAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jLabel14.setText("CHASSI:");

        txtchassi.setEnabled(false);
        txtchassi.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                txtchassiAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        JAno.setEnabled(false);

        jLabel17.setText("ANO FABRICAÇÃO:");

        cmbEmprAloc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbEmprAloc.setEnabled(false);
        cmbEmprAloc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEmprAlocActionPerformed(evt);
            }
        });

        cmbempr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbempr.setEnabled(false);
        cmbempr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbemprActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JpanelFrotaLayout = new javax.swing.GroupLayout(JpanelFrota);
        JpanelFrota.setLayout(JpanelFrotaLayout);
        JpanelFrotaLayout.setHorizontalGroup(
            JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanelFrotaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpanelFrotaLayout.createSequentialGroup()
                        .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbEmprAloc, 0, 262, Short.MAX_VALUE)
                            .addComponent(cmbempr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbUnidAloc, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbunidade, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(JpanelFrotaLayout.createSequentialGroup()
                        .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(29, 29, 29)
                        .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtmunicipio, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                            .addComponent(txtmarcamodelo))
                        .addGap(67, 67, 67)
                        .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JpanelFrotaLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JAno, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JpanelFrotaLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbclassificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(JpanelFrotaLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtrenavam, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblrenavam, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtplaca, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtchassi, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(JpanelFrotaLayout.createSequentialGroup()
                    .addGap(184, 184, 184)
                    .addComponent(jLabel5)
                    .addContainerGap(482, Short.MAX_VALUE)))
        );
        JpanelFrotaLayout.setVerticalGroup(
            JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanelFrotaLayout.createSequentialGroup()
                .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpanelFrotaLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblrenavam, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(txtrenavam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(txtplaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JpanelFrotaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtchassi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JAno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtmarcamodelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbclassificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtmunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(cmbunidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbempr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(cmbUnidAloc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbEmprAloc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(JpanelFrotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(JpanelFrotaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel5)
                    .addContainerGap(173, Short.MAX_VALUE)))
        );

        btnnova.setText("NOVO");
        btnnova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnovaActionPerformed(evt);
            }
        });

        btnsalvar.setText("SALVAR");
        btnsalvar.setEnabled(false);
        btnsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsalvarActionPerformed(evt);
            }
        });

        btnconsultar.setText("CONSULTAR");
        btnconsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultarActionPerformed(evt);
            }
        });

        btnalterar.setText("ALTERAR");
        btnalterar.setEnabled(false);
        btnalterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnalterarActionPerformed(evt);
            }
        });

        btncancelar.setText("CANCELAR");
        btncancelar.setEnabled(false);
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });

        btnconsultar1.setText("PROCURAR");
        btnconsultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnnova)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnsalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnconsultar)
                .addGap(18, 18, 18)
                .addComponent(btnconsultar1)
                .addGap(17, 17, 17)
                .addComponent(btnalterar)
                .addGap(18, 18, 18)
                .addComponent(btncancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(JpanelFrota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JpanelFrota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnnova)
                    .addComponent(btnsalvar)
                    .addComponent(btnconsultar)
                    .addComponent(btnalterar)
                    .addComponent(btncancelar)
                    .addComponent(btnconsultar1))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void mostrafunc(){
   frota = new JDProcveiculo(this,true);
   frota.setLocationRelativeTo(null);
   frota.setVisible(true);
}
    private void btnnovaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnovaActionPerformed
        // TODO add your handling code here:
   
          JpanelFrota.setEnabled(true); 
         Component[] componentes =  JpanelFrota.getComponents(); // altere para o nome da variavel do seu painel
         for (Component componente : componentes) {
                    componente.setEnabled(true);
                }
                for (int i=0; i < JpanelFrota.getComponentCount(); i++) {
                    //varre todos os componentes
                    Component c = JpanelFrota.getComponent(i);
                    if (c instanceof JTextField) {
                        //apaga os valores
                        JTextField field = (JTextField) c;
                        field.setText("");
                     
                    }
           }
        if (cmbempr.getItemCount()>0){
            cmbempr.removeAllItems();
        }
         if (cmbEmprAloc.getItemCount()>0){
            cmbEmprAloc.removeAllItems();
        }
      
       
        EmpresasBO boemp=new EmpresasBO();
          try{
                List<Empresas> lista=boemp.listar();
                for(Empresas lstemp:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbempr.addItem(lstemp.getNmfantasia());
                    cmbEmprAloc.addItem(lstemp.getNmfantasia());
                }
            }catch(NegocioException ex){

            }
 
        btnnova.setEnabled(false);
                btnsalvar.setEnabled(true);
                btnconsultar.setEnabled(false);
                btnalterar.setEnabled(false);
                btncancelar.setEnabled(true);
                       
    }//GEN-LAST:event_btnnovaActionPerformed
    
    private void btnsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalvarActionPerformed
        // TODO add your handling code here:
        
        int idclassificacao=0;
        int idunidade=0;
        int idalocacao=0;
        int idemp=0;
        int idempAloc=0;
        boolean vazio=true;
        
        Component[] componentes1 =  JpanelFrota.getComponents(); // altere para o nome da variavel do seu painel

      for (int i=0; i < JpanelFrota.getComponentCount(); i++) {
          //varre todos os componentes
          Component c1 = JpanelFrota.getComponent(i);
          if (c1 instanceof JTextField) {
              //apaga os valores
              JTextField field = (JTextField) c1;
              if(!field.getText().isEmpty()){
                 vazio=false;
               }else{
                  break;
              }
              
          }
     } 
        
        
      if(!vazio){  
        Date dataHoraAtual = new Date();
       
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String data = new SimpleDateFormat("dd-MM-yyyy").format(dataHoraAtual);
        String hora = new SimpleDateFormat("HH:mm:ss").format(dataHoraAtual);
        String dtadm, dtdem;
        Veiculos veiculos= new Veiculos();
        veiculos.setRenavam(Integer.parseInt(txtrenavam.getText()));
        veiculos.setPlaca(txtplaca.getText());
      
        veiculos.setChassi(txtchassi.getText());
        
        veiculos.setMarcaModelo(txtmarcamodelo.getText());
        
        
        veiculos.setAno(JAno.getYear());
        veiculos.setMunicipio(txtmunicipio.getText());
     
       veiculos.setUser(this.getUser());
        
        veiculos.setHora(java.sql.Time.valueOf(hora));
        
         data=data.substring(6,10)+"-"+data.substring(3,5)+"-"+data.substring(0,2);
         
        veiculos.setDt(java.sql.Date.valueOf(data));
            
       ClassificacaoBO boclass = new ClassificacaoBO();
        try { 
           
            Classificacao classificacao=boclass.consultar(cmbclassificacao.getSelectedItem().toString());
            
            idclassificacao=classificacao.getIdclassificacao();
            
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
         EmpresasBO boemp = new EmpresasBO();
        try { 
            Empresas empresa=boemp.consultar(cmbempr.getSelectedItem().toString());
            idemp=empresa.getIdempresa();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        EmpresasBO boempaloc = new EmpresasBO();
        try { 
            Empresas EmprAloc=boempaloc.consultar(cmbEmprAloc.getSelectedItem().toString());
            idempAloc=EmprAloc.getIdempresa();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        UnidadesBO bounid = new UnidadesBO();
        try { 
            Unidades unidade=bounid.consultar(idemp,cmbunidade.getSelectedItem().toString());
            //Unidades unidade=bounid.consultar(11,1);
            idunidade=unidade.getId();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
         UnidadesBO bounidAloc = new UnidadesBO();
        try { 
            Unidades unidadeAloc=bounidAloc.consultar(idempAloc,cmbUnidAloc.getSelectedItem().toString());
           // Unidades unidadeAloc=bounidAloc.consultar(11,1);
            idalocacao=unidadeAloc.getId();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        veiculos.setClassificacao(idclassificacao);
        
        veiculos.setProprietario(idunidade);
        veiculos.setAlocacao(idalocacao);
        VeiculosBO bo = new VeiculosBO();
        try{
            if(veiculos.getRenavam()!=0){
                bo.inserir(veiculos);
             
                
                Component[] componentes =  JpanelFrota.getComponents(); // altere para o nome da variavel do seu painel
                for (Component componente : componentes) {
                    componente.setEnabled(false);
                }
                for (int i=0; i < JpanelFrota.getComponentCount(); i++) {
                    //varre todos os componentes
                    Component c = JpanelFrota.getComponent(i);
                    if (c instanceof JTextField) {
                        //apaga os valores
                        JTextField field = (JTextField) c;
                        field.setText("");
                        System.out.println("apagando campo " + i);
                    }
           }
             
            }
             btnnova.setEnabled(true);
            btnsalvar.setEnabled(false);
            btnconsultar.setEnabled(true);
            btnalterar.setEnabled(false);
            btncancelar.setEnabled(false);
            JpanelFrota.setEnabled(false);
        }catch(NegocioException e){
            JOptionPane.showMessageDialog(null,e.getMessage() ,"Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }else{
          JOptionPane.showMessageDialog(null,"Preencha todos os campos obrigatórios" ,"Aviso", JOptionPane.WARNING_MESSAGE);
      }
        
    }//GEN-LAST:event_btnsalvarActionPerformed

    private void btnconsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultarActionPerformed
        // TODO add your handling code here:
         int idunidade=0;
        int idalocacao=0;
        int idemp=0;
        int idempAloc=0;
         String idconsulta = JOptionPane.showInputDialog("Digite a Placa do Veículo");
        VeiculosBO bo = new VeiculosBO();
                 Component[] componentes =  JpanelFrota.getComponents(); // altere para o nome da variavel do seu painel
                for (Component componente : componentes) {
                    componente.setEnabled(true);
                }
         JpanelFrota.setEnabled(true);
            btnnova.setEnabled(false);
            btnsalvar.setEnabled(false);
            btnconsultar.setEnabled(false);
            btnalterar.setEnabled(true);
            btncancelar.setEnabled(true);
        try {
            
            Veiculos veiculo=bo.consultar(idconsulta);
            
            txtrenavam.setText(String.valueOf(veiculo.getRenavam()));
            txtplaca.setText(veiculo.getPlaca());
            txtchassi.setText(veiculo.getChassi());
            txtmarcamodelo.setText(veiculo.getMarcaModelo());
            JAno.setYear(veiculo.getAno());
            txtmunicipio.setText(veiculo.getMunicipio());
           
                idunidade=veiculo.getProprietario();
             idalocacao=veiculo.getAlocacao();
             cmbclassificacao.removeAllItems();
            ClassificacaoBO boclassificacao=new ClassificacaoBO();
             try{
                List<Classificacao> lista=boclassificacao.listar();
                for(Classificacao lstclassificacao:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbclassificacao.addItem(lstclassificacao.getClassificacao());
                    if(lstclassificacao.getIdclassificacao()==veiculo.getClassificacao() ){
                        cmbclassificacao.setSelectedItem(lstclassificacao.getClassificacao());
                    }
                }
            }catch(NegocioException ex){

            }
        EmpresasBO boemp1 = new EmpresasBO();
        
        idemp=0;
        idempAloc=0;
    
        UnidadesBO bounid=new UnidadesBO();
        Unidades unid=bounid.consultar(idunidade);
         UnidadesBO bounidAloc=new UnidadesBO();
        Unidades unidAloc=bounidAloc.consultar(idalocacao);
        idemp=unid.getIdempresa();
        
        idempAloc=unidAloc.getIdempresa();
        EmpresasBO boemp=new EmpresasBO();
          try{
                List<Empresas> lista=boemp.listar();
                for(Empresas lstemp:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
               
                    if(lstemp.getIdempresa()==idemp){
                         cmbempr.setSelectedItem(lstemp.getNmfantasia());
                    }
                      if(lstemp.getIdempresa()==idempAloc){
                         cmbEmprAloc.setSelectedItem(lstemp.getNmfantasia());
                    }
                }
            }catch(NegocioException ex){

            }
          
          
          
                
       
       
        EmpresasBO bolst = new EmpresasBO();
        try {
               
                Empresas empresalst=bolst.consultar(cmbempr.getSelectedItem().toString());
                
                idemp=empresalst.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbunidade.removeAllItems();
        UnidadesBO bouni=new UnidadesBO();
          try{
                List<Unidades> lista=bouni.listar(idemp);
                for(Unidades lstunidades:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbunidade.addItem(lstunidades.getNomeUnidade());
                    if(lstunidades.getId()==veiculo.getProprietario()){
                        cmbunidade.setSelectedItem(lstunidades.getNomeUnidade());
                    }
                }
            }catch(NegocioException ex){

            } catch (DadosException ex) { 
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        } 
          
          
         EmpresasBO bolstaloc = new EmpresasBO();
        try {
               
                Empresas empresalstaloc=bolstaloc.consultar(cmbEmprAloc.getSelectedItem().toString());
                
                idemp=empresalstaloc.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbUnidAloc.removeAllItems();
        UnidadesBO boUniAloc=new UnidadesBO();
          try{
                List<Unidades> lista=boUniAloc.listar(idemp);
                for(Unidades lstunidades:lista){

                //Object[] linha = //alguma linha

                //model.addRow(linha);
                    
                    cmbUnidAloc.addItem(lstunidades.getNomeUnidade());
                    if(lstunidades.getId()==veiculo.getAlocacao()){
                        cmbUnidAloc.setSelectedItem(lstunidades.getNomeUnidade());
                    }
                }
            }catch(NegocioException ex){

            } catch (DadosException ex) { 
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }   
 
          cmbunidade.setSelectedItem(unid.getNomeUnidade());
          cmbUnidAloc.setSelectedItem(unidAloc.getNomeUnidade());

        
        } catch (NegocioException ex) {
            Logger.getLogger(JDUnidades.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnconsultarActionPerformed

    private void btnalterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnalterarActionPerformed
       int idclassificacao=0;
        int idunidade=0;
        int idalocacao=0;
        int idemp=0;
        int idempAloc=0;
        boolean vazio=true;
        
        Component[] componentes1 =  JpanelFrota.getComponents(); // altere para o nome da variavel do seu painel

      for (int i=0; i < JpanelFrota.getComponentCount(); i++) {
          //varre todos os componentes
          Component c1 = JpanelFrota.getComponent(i);
          if (c1 instanceof JTextField) {
              //apaga os valores
              JTextField field = (JTextField) c1;
              if(!field.getText().isEmpty()){
                 vazio=false;
               }else{
                  break;
              }
              
          }
     } 
        
        
      if(!vazio){  
        Date dataHoraAtual = new Date();
       
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String data = new SimpleDateFormat("dd-MM-yyyy").format(dataHoraAtual);
        String hora = new SimpleDateFormat("HH:mm:ss").format(dataHoraAtual);
        String dtadm, dtdem;
        Veiculos veiculos= new Veiculos();
        veiculos.setRenavam(Integer.parseInt(txtrenavam.getText()));
        veiculos.setPlaca(txtplaca.getText());
      
        veiculos.setChassi(txtchassi.getText());
        
        veiculos.setMarcaModelo(txtmarcamodelo.getText());
        
        
        veiculos.setAno(JAno.getYear());
        veiculos.setMunicipio(txtmunicipio.getText());
     
       veiculos.setUser(this.getUser());
        
        veiculos.setHora(java.sql.Time.valueOf(hora));
        
         data=data.substring(6,10)+"-"+data.substring(3,5)+"-"+data.substring(0,2);
         
        veiculos.setDt(java.sql.Date.valueOf(data));
            
       ClassificacaoBO boclass = new ClassificacaoBO();
        try { 
           
            Classificacao classificacao=boclass.consultar(cmbclassificacao.getSelectedItem().toString());
            
            idclassificacao=classificacao.getIdclassificacao();
            
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
         EmpresasBO boemp = new EmpresasBO();
        try { 
            Empresas empresa=boemp.consultar(cmbempr.getSelectedItem().toString());
            idemp=empresa.getIdempresa();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        EmpresasBO boempaloc = new EmpresasBO();
        try { 
            Empresas EmprAloc=boempaloc.consultar(cmbEmprAloc.getSelectedItem().toString());
            idempAloc=EmprAloc.getIdempresa();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        UnidadesBO bounid = new UnidadesBO();
        try { 
            Unidades unidade=bounid.consultar(idemp,cmbunidade.getSelectedItem().toString());
            //Unidades unidade=bounid.consultar(11,1);
            idunidade=unidade.getId();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
         UnidadesBO bounidAloc = new UnidadesBO();
        try { 
            Unidades unidadeAloc=bounidAloc.consultar(idempAloc,cmbUnidAloc.getSelectedItem().toString());
           // Unidades unidadeAloc=bounidAloc.consultar(11,1);
            idalocacao=unidadeAloc.getId();
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        veiculos.setClassificacao(idclassificacao);
        
        veiculos.setProprietario(idunidade);
        veiculos.setAlocacao(idalocacao);
        VeiculosBO bo = new VeiculosBO();
        try{
            if(veiculos.getRenavam()!=0){
                bo.alterar(veiculos);
             
                
                Component[] componentes =  JpanelFrota.getComponents(); // altere para o nome da variavel do seu painel
                for (Component componente : componentes) {
                    componente.setEnabled(false);
                }
                for (int i=0; i < JpanelFrota.getComponentCount(); i++) {
                    //varre todos os componentes
                    Component c = JpanelFrota.getComponent(i);
                    if (c instanceof JTextField) {
                        //apaga os valores
                        JTextField field = (JTextField) c;
                        field.setText("");
                        System.out.println("apagando campo " + i);
                    }
           }
             
            }
             btnnova.setEnabled(true);
            btnsalvar.setEnabled(false);
            btnconsultar.setEnabled(true);
            btnalterar.setEnabled(false);
            btncancelar.setEnabled(false);
            JpanelFrota.setEnabled(false);
        }catch(NegocioException e){
            JOptionPane.showMessageDialog(null,e.getMessage() ,"Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }else{
          JOptionPane.showMessageDialog(null,"Preencha todos os campos obrigatórios" ,"Aviso", JOptionPane.WARNING_MESSAGE);
      }
        
    }//GEN-LAST:event_btnalterarActionPerformed
    
    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        // TODO add your handling code here:
         btnnova.setEnabled(true);
        btnsalvar.setEnabled(false);
        btnconsultar.setEnabled(true);
        btnalterar.setEnabled(false);
        btncancelar.setEnabled(false);
       Component[] componentes =  JpanelFrota.getComponents(); // altere para o nome da variavel do seu painel
         for (Component componente : componentes) {
                    componente.setEnabled(false);
                }
                for (int i=0; i < JpanelFrota.getComponentCount(); i++) {
                    //varre todos os componentes
                    Component c = JpanelFrota.getComponent(i);
                    if (c instanceof JTextField) {
                        //apaga os valores
                        JTextField field = (JTextField) c;
                        field.setText("");
                        System.out.println("apagando campo " + i);
                    }
           }
                          
        
    }//GEN-LAST:event_btncancelarActionPerformed
      
    private void btnconsultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultar1ActionPerformed
        // TODO add your handling code here:
        mostrafunc();
    }//GEN-LAST:event_btnconsultar1ActionPerformed

    private void txtchassiAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_txtchassiAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_txtchassiAncestorMoved

    private void txtplacaAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_txtplacaAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_txtplacaAncestorMoved

    private void lblrenavamHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_lblrenavamHierarchyChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_lblrenavamHierarchyChanged

    private void txtrenavamAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_txtrenavamAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrenavamAncestorMoved

    private void cmbemprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbemprActionPerformed
        // TODO add your handling code here:
    if (cmbempr.getItemCount()>0){
         String nmfantasia = cmbempr.getSelectedItem().toString();
       int idemp=0;
       
        EmpresasBO bo = new EmpresasBO();
        try {
               
                Empresas empresa=bo.consultar(nmfantasia);
                
                idemp=empresa.getIdempresa();
                
        } catch (NegocioException ex) {
            Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbunidade.removeAllItems();
        if(idemp!=0){
            UnidadesBO bouni=new UnidadesBO();
              try{
                    List<Unidades> lista=bouni.listar(idemp);
                    for(Unidades lstunidades:lista){

                    //Object[] linha = //alguma linha

                    //model.addRow(linha);

                        cmbunidade.addItem(lstunidades.getNomeUnidade());
                    }
                }catch(NegocioException ex){

                } catch (DadosException ex) { 
                Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
    }
    }//GEN-LAST:event_cmbemprActionPerformed

    private void cmbEmprAlocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEmprAlocActionPerformed
        // TODO add your handling code here:
        if(cmbEmprAloc.getItemCount()>0){
            String nmfantasia = cmbEmprAloc.getSelectedItem().toString();
          int idemp=0;

           EmpresasBO bo = new EmpresasBO();
           try {

                   Empresas empresa=bo.consultar(nmfantasia);

                   idemp=empresa.getIdempresa();

           } catch (NegocioException ex) {
               Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
           }
           cmbUnidAloc.removeAllItems();
           if(idemp!=0){
           UnidadesBO bouni=new UnidadesBO();
             try{
                   List<Unidades> lista=bouni.listar(idemp);
                   for(Unidades lstunidades:lista){

                   //Object[] linha = //alguma linha

                   //model.addRow(linha);

                       cmbUnidAloc.addItem(lstunidades.getNomeUnidade());
                   }
               }catch(NegocioException ex){

               } catch (DadosException ex) { 
               Logger.getLogger(JFIFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
               } 
           }
        }
    }//GEN-LAST:event_cmbEmprAlocActionPerformed

    private void txtrenavamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrenavamKeyTyped
        // TODO add your handling code here:
        String caracteres="0987654321";
        if(!caracteres.contains(evt.getKeyChar()+"")){
        evt.consume();
        }
    }//GEN-LAST:event_txtrenavamKeyTyped
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JYearChooser JAno;
    private javax.swing.JPanel JpanelFrota;
    private javax.swing.JButton btnalterar;
    private javax.swing.JButton btncancelar;
    private javax.swing.JButton btnconsultar;
    private javax.swing.JButton btnconsultar1;
    private javax.swing.JButton btnnova;
    private javax.swing.JButton btnsalvar;
    private javax.swing.JComboBox<String> cmbEmprAloc;
    private javax.swing.JComboBox<String> cmbUnidAloc;
    private javax.swing.JComboBox<String> cmbclassificacao;
    private javax.swing.JComboBox<String> cmbempr;
    private javax.swing.JComboBox<String> cmbunidade;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblrenavam;
    private javax.swing.JTextField txtchassi;
    private javax.swing.JTextField txtmarcamodelo;
    private javax.swing.JTextField txtmunicipio;
    private javax.swing.JTextField txtplaca;
    private javax.swing.JTextField txtrenavam;
    // End of variables declaration//GEN-END:variables
}
